(defmacro defanaph (name fn)
  `(defmacro ,name (&rest rest)
     (labels ((%expander (rest &optional args)
               (if (null rest)
                 `(,',fn ,@args)
                 (let ((temp (gensym)))
                   `(let* ((,temp ,(car rest)) (it ,temp))
                      ,(%expander (cdr rest) (cons temp args)))))))
     (%expander rest))))

(defmacro with-gensyms (syms &body body)
  `(let ,(mapcar (lambda (sym)
                   (list sym '(gensym)))
          syms)
     ,@body))
